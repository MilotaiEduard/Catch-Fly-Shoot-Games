<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>